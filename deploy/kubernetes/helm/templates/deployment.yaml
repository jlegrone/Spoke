apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "spoke.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "spoke.name" . }}
    helm.sh/chart: {{ include "spoke.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.autoscaler.minReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "spoke.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "spoke.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
{{- if not .Values.env.existingSecretName }}
        checksum/spoke: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        # checksum/pg: {{ include (print $.Template.BasePath "/charts/postgresql/templates/secret.yaml") . | sha256sum }}
{{- end }}
    spec:
      containers:
        - name: spoke
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deployment.port }}
              # protocol: TCP
          env:
          - name: PORT
            value: {{ .Values.deployment.port | quote }}
{{- if .Values.postgresql.enabled }}
          - name: DB_TYPE
            value: pg
          - name: DB_NAME
            value: {{ .Values.postgresql.postgresqlDatabase | quote }}
          - name: DB_USER
            value: {{ .Values.postgresql.postgresqlUsername | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "spoke.postgresql.secretName" . }}
                key: postgresql-password
          - name: DB_HOST
            value: "{{ template "spoke.postgresql.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
{{- end }}
{{- range $key, $val := .Values.env.vars }}
          - name: {{ $key | quote }}
            value: {{ $val | quote }}
{{- end }}
{{- if .Values.env.existingSecretName }}
          envFrom:
          - secretRef:
              name: {{ .Values.env.existingSecretName }}
{{- else }}
          envFrom:
          - secretRef:
              name: {{ include "spoke.fullname" . }}-env
{{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
